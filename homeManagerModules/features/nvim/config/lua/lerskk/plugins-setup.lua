-- local ensure_packer = function()
-- 	local fn = vim.fn
-- 	local install_path = fn.stdpath('data') .. '/site/pack/packer/start/packer.nvim'
-- 	if fn.empty(fn.glob(install_path)) > 0 then
-- 		fn.system({ 'git', 'clone', '--depth', '1', 'https://github.com/wbthomason/packer.nvim', install_path })
-- 		vim.cmd [[packadd packer.nvim]]
-- 		return true
-- 	end
-- 	return false
-- end
-- local packer_bootstrap = ensure_packer()
--
-- vim.cmd([[
--   augroup packer_user_config
--     autocmd!
--     autocmd BufWritePost plugins-setup.lua source <afile> | PackerSync
--   augroup end
-- ]])
--
-- local status, packer = pcall(require, 'packer')
-- if not status then return end
--
-- return packer.startup(function(use)
-- 	use 'wbthomason/packer.nvim'
--
-- 	use {
-- 		'lukas-reineke/indent-blankline.nvim',
-- 		config = function()
-- 			require('ibl').setup()
-- 		end,
-- 	}
-- 	use({
-- 		"utilyre/barbecue.nvim",
-- 		tag = "*",
-- 		requires = {
-- 			"SmiteshP/nvim-navic",
-- 			"nvim-tree/nvim-web-devicons", -- optional dependency
-- 		},
-- 		config = function()
-- 			require("barbecue").setup()
-- 		end,
-- 	})
--
--
-- 	-- autocompletion
-- 	use {
-- 		"pmizio/typescript-tools.nvim",
-- 		requires = { "nvim-lua/plenary.nvim", "neovim/nvim-lspconfig" },
-- 		config = function()
-- 			require("typescript-tools").setup {}
-- 		end,
-- 	}
--
-- 	-- snipets
-- 	use {
-- 		'L3MON4D3/LuaSnip',
-- 		tag = 'v2.*',
-- 		run = 'make install_jsregexp'
-- 	}
--
--
-- 	-- surrounds
-- 	use {
-- 		'kylechui/nvim-surround',
-- 		config = function() require('nvim-surround').setup {} end
-- 	}
-- 	use { "windwp/nvim-autopairs", config = function() require("nvim-autopairs").setup {} end }
-- 	use { 'wellle/targets.vim' }
-- 	use 'windwp/nvim-ts-autotag'
--
--
-- 	-- version control
-- 	use 'lewis6991/gitsigns.nvim'
-- 	use 'mbbill/undotree'
--
-- 	-- comments
-- 	use {
-- 		'numToStr/Comment.nvim',
-- 		config = function()
-- 			require('Comment').setup {
-- 				pre_hook = require('ts_context_commentstring.integrations.comment_nvim').create_pre_hook(),
-- 			}
-- 		end,
-- 		after = 'nvim-ts-context-commentstring',
-- 	}
-- 	use { "akinsho/toggleterm.nvim", tag = '*', config = function()
-- 		require("toggleterm").setup()
-- 	end }
--
-- 	-- obsidian
--
--
-- 	if packer_bootstrap then
-- 		require('packer').sync()
-- 	end
-- end)
